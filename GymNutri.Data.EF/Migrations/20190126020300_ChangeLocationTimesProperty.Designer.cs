// <auto-generated />
using System;
using GymNutri.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymNutri.Data.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190126020300_ChangeLocationTimesProperty")]
    partial class ChangeLocationTimesProperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GymNutri.Data.Entities.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Image")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("OrderNo");

                    b.Property<string>("PositionId")
                        .HasMaxLength(20);

                    b.Property<string>("Url")
                        .HasMaxLength(1000);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.AdvertisementPage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20);

                    b.Property<bool>("Active");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("AdvertisementPages");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.AdvertisementPosition", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20);

                    b.Property<bool>("Active");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("PageId")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("AdvertisementPositions");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Announcement", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128);

                    b.Property<bool>("Active");

                    b.Property<string>("Content")
                        .HasMaxLength(250);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int>("OrderNo");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.AnnouncementUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("AnnouncementId")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool?>("HasRead");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.ToTable("AnnouncementUsers");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool>("Active");

                    b.Property<string>("Avatar")
                        .HasMaxLength(1000);

                    b.Property<decimal>("Balance");

                    b.Property<DateTime?>("BirthDay");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FullName")
                        .HasMaxLength(255);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<bool?>("HomeFlag");

                    b.Property<bool?>("HotFlag");

                    b.Property<string>("Image")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("Tags")
                        .HasMaxLength(255);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.Property<int?>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.BlogTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("BlogId");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("TagId");

                    b.ToTable("BlogTags");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.BodyClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Detail")
                        .HasMaxLength(4000);

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("BodyClassifications");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.CommonCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ClassCode1")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ClassCode2")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ClassCode3")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("OrderNo");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("CommonCategories ");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Contact", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("Address")
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<double?>("Lat");

                    b.Property<double?>("Lng");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Other");

                    b.Property<string>("Phone")
                        .HasMaxLength(50);

                    b.Property<string>("Website")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.DaisyOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("AlternativePersonEmail")
                        .HasMaxLength(255);

                    b.Property<string>("AlternativePersonName")
                        .HasMaxLength(255);

                    b.Property<string>("AlternativePersonPhone")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int>("LocationId");

                    b.Property<long>("MemberCardId");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderInDay");

                    b.Property<TimeSpan>("PlanOrderTime");

                    b.Property<TimeSpan>("RealOrderTime");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserFeedback")
                        .HasMaxLength(500);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("MemberCardId");

                    b.ToTable("DaisyOrders");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.DaisyOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long>("DaisyOrderId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("MealCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("MealId");

                    b.Property<TimeSpan>("RealEatTime");

                    b.Property<string>("SetOfFoodCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("SetOfFoodId");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserFeedback")
                        .HasMaxLength(500);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("DaisyOrderId");

                    b.HasIndex("MealId");

                    b.HasIndex("SetOfFoodId");

                    b.ToTable("DaisyOrderDetails");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("Message")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Food", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("CookingDuration");

                    b.Property<string>("CookingGuideLink")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FoodCategoryCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("FoodCategoryId");

                    b.Property<string>("Image")
                        .HasMaxLength(1000);

                    b.Property<string>("Ingredient")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Recipe")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("Tags")
                        .HasMaxLength(255);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("FoodCategoryId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("FoodTypeCode")
                        .HasMaxLength(255);

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("OrderNo");

                    b.Property<int?>("ParentId");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("Tags")
                        .HasMaxLength(255);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodCategoryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Caption")
                        .HasMaxLength(255);

                    b.Property<int>("FoodCategoryId");

                    b.Property<string>("Path")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("FoodCategoryId");

                    b.ToTable("FoodCategoryImages");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodCategoryTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int>("FoodCategoryId");

                    b.Property<string>("TagId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("FoodCategoryId");

                    b.HasIndex("TagId");

                    b.ToTable("FoodCategoryTags");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Caption")
                        .HasMaxLength(255);

                    b.Property<long>("FoodId");

                    b.Property<string>("Path")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.ToTable("FoodImages");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Cost");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<long>("FoodId");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("PromotionPrice");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.ToTable("FoodPrices");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodsInSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("FoodCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long>("FoodId");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("SetOfFoodCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("SetOfFoodId");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("SetOfFoodId");

                    b.ToTable("FoodsInSets");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<long>("FoodId");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("TagId");

                    b.ToTable("FoodTags");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Footer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Footers");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Function", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(128);

                    b.Property<bool>("Active");

                    b.Property<string>("IconCss")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("OrderNo");

                    b.Property<string>("ParentId")
                        .HasMaxLength(255);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Language", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<bool>("IsDefault");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Resources");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.LocationToGetOrderOfUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<TimeSpan>("FirstFrom");

                    b.Property<TimeSpan>("FirstTo");

                    b.Property<TimeSpan?>("SecondFrom");

                    b.Property<TimeSpan?>("SecondTo");

                    b.Property<TimeSpan?>("ThirdFrom");

                    b.Property<TimeSpan?>("ThirdTo");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("LocationToGetOrderOfUsers");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int>("DesireTypeCode")
                        .HasMaxLength(255);

                    b.Property<TimeSpan>("MealTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("OrderNo");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.MemberCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Cost");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("MemberTypeCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("MonthDuration");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("PromotionPrice");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<int>("UserMenuId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UserMenuId");

                    b.ToTable("MemberCards");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Content");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<bool>("CanCreate");

                    b.Property<bool>("CanDelete");

                    b.Property<bool>("CanRead");

                    b.Property<bool>("CanUpdate");

                    b.Property<string>("FunctionId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.SetOfFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SetOfFoods");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int?>("DisplayOrder");

                    b.Property<string>("GroupAlias")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Url")
                        .HasMaxLength(1000);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.StatusCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Color")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("OrderNo");

                    b.Property<bool>("ShowInAdmin");

                    b.Property<bool>("ShowInClient");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("StatusCategories ");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.SystemConfig", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Value1");

                    b.Property<int?>("Value2");

                    b.Property<bool?>("Value3");

                    b.Property<DateTime?>("Value4");

                    b.Property<decimal?>("Value5");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigs");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Tag", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.TemplateMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("TemplateMenus");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.TemplateMenuDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("MealCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("MealId");

                    b.Property<string>("SetOfFoodCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("SetOfFoodId");

                    b.Property<string>("TemplateMenuCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("TemplateMenuId");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.HasIndex("TemplateMenuId");

                    b.ToTable("TemplateMenuDetails");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.TemplateMenuForBodyClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BodyClassificationCode")
                        .IsRequired();

                    b.Property<int>("BodyClassificationId")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("TemplateMenuCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("TemplateMenuId");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("BodyClassificationId");

                    b.HasIndex("TemplateMenuId");

                    b.ToTable("TemplateMenuForBodyClassifications");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserBodyClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BodyClassificationCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("BodyClassificationId");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("BodyClassificationId");

                    b.ToTable("UserBodyClassifications");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserBodyIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Ass");

                    b.Property<decimal>("Chest");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<decimal>("FatPercent");

                    b.Property<decimal>("Height");

                    b.Property<decimal>("MusclePercent");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.Property<decimal>("Waist");

                    b.Property<decimal>("Weight");

                    b.HasKey("Id");

                    b.ToTable("UserBodyIndexes");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserDesire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DesireTypeCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("UserDesires");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserFavoriteFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<long>("FoodId");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.ToTable("UserFavoriteFoods");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserFavoriteTaste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FavoriteTasteTypeCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(500);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(2000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(500);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(500);

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("UserFavoriteTastes");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("UserMenus");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserMenuDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int>("TemplateMenuId");

                    b.Property<string>("UserCreated")
                        .HasMaxLength(255);

                    b.Property<int>("UserMenuId");

                    b.Property<string>("UserModified")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("TemplateMenuId");

                    b.HasIndex("UserMenuId");

                    b.ToTable("UserMenuDetails");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Advertisement", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.AdvertisementPosition", "AdvertisementPosition")
                        .WithMany("Advertisements")
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.AdvertisementPosition", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.AdvertisementPage", "AdvertisementPage")
                        .WithMany("AdvertisementPositions")
                        .HasForeignKey("PageId");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Announcement", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.AnnouncementUser", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Announcement", "Announcement")
                        .WithMany("AnnouncementUsers")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.BlogTag", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Blog", "Blog")
                        .WithMany("BlogTags")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.DaisyOrder", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.LocationToGetOrderOfUser", "LocationToGetOrderOfUser")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.MemberCard", "MemberCard")
                        .WithMany()
                        .HasForeignKey("MemberCardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.DaisyOrderDetail", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.DaisyOrder", "DaisyOrder")
                        .WithMany("DaisyOrderDetails")
                        .HasForeignKey("DaisyOrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.SetOfFood", "SetOfFood")
                        .WithMany()
                        .HasForeignKey("SetOfFoodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Food", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.FoodCategory", "FoodCategory")
                        .WithMany("Foods")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodCategoryImage", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.FoodCategory", "FoodCategory")
                        .WithMany()
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodCategoryTag", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.FoodCategory", "FoodCategory")
                        .WithMany("FoodCategoryTags")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodImage", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodPrice", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Food", "Food")
                        .WithMany("FoodPrices")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodsInSet", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.SetOfFood", "SetOfFood")
                        .WithMany("FoodsInSets")
                        .HasForeignKey("SetOfFoodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.FoodTag", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Food", "Food")
                        .WithMany("FoodTags")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.MemberCard", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.UserMenu", "UserMenu")
                        .WithMany()
                        .HasForeignKey("UserMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.Permission", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Function", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.AppRole", "AppRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.TemplateMenuDetail", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.TemplateMenu", "TemplateMenu")
                        .WithMany("TemplateMenuDetails")
                        .HasForeignKey("TemplateMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.TemplateMenuForBodyClassification", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.BodyClassification", "BodyClassification")
                        .WithMany()
                        .HasForeignKey("BodyClassificationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.TemplateMenu", "TemplateMenu")
                        .WithMany()
                        .HasForeignKey("TemplateMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserBodyClassification", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.BodyClassification", "BodyClassification")
                        .WithMany()
                        .HasForeignKey("BodyClassificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserFavoriteFood", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymNutri.Data.Entities.UserMenuDetail", b =>
                {
                    b.HasOne("GymNutri.Data.Entities.TemplateMenu", "TemplateMenu")
                        .WithMany()
                        .HasForeignKey("TemplateMenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymNutri.Data.Entities.UserMenu", "UserMenu")
                        .WithMany()
                        .HasForeignKey("UserMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
